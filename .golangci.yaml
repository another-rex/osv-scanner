version: "2"

linters:
  default: all
  # prettier-ignore
  disable:
    - cyclop           #
    - err113           # will re-add later (another-rex)
    - exhaustruct      # overkill (g-rath)
    - forcetypeassert  # too hard (g-rath)
    - funlen           #
    - funcorder        #
    - gochecknoglobals # disagree with, for non changing variables (another-rex)
    - gocognit         #
    - goconst          # not everything should be a constant
    - gocyclo          #
    - godot            # comments are fine without full stops (g-rath)
    - godox            # to-do comments are fine (g-rath)
    - ireturn          # disagree with, sort of (g-rath)
    - lll              # line length is hard (g-rath)
    - maintidx         #
    - mnd              # not every number is magic (g-rath)
    - nestif           #
    - noinlineerr      #
    - nonamedreturns   # disagree with, for now (another-rex)
    - tagliatelle      # we're parsing data from external sources (g-rath)
    - testpackage      # will re-add later (another-rex)
    - varnamelen       # maybe later (g-rath)
    - wrapcheck        # too difficult, will re-add later (another-rex)
    - wsl              # disagree with, for now (g-rath)
    - wsl_v5           # disagree with, for now (g-rath)
  settings:
    depguard:
      rules:
        regexp:
          files:
            - "!**/internal/cachedregexp/**"
            - "!**/internal/testutility/normalize.go"
          deny:
            - pkg: regexp
              desc: Use github.com/google/osv-scanner/v2/internal/cachedregexp instead
    exhaustive:
      default-signifies-exhaustive: true
    forbidigo:
      forbid:
        - pattern: ^testing.T.Skip
          pkg: ^testing$
          msg: go-snaps needs to know the test has been skipped, so use `testutility.Skip` instead
        - pattern: ^os.Getwd
          pkg: ^os$
          msg: use `testutility.GetCurrentWorkingDirectory`
      analyze-types: true
    gocritic:
      disabled-checks:
        - ifElseChain
    govet:
      settings:
        printf:
          funcs:
            - (github.com/google/osv-scanner/v2/pkg/reporter.Reporter).Errorf
            - (github.com/google/osv-scanner/v2/pkg/reporter.Reporter).Warnf
            - (github.com/google/osv-scanner/v2/pkg/reporter.Reporter).Infof
    nlreturn:
      block-size: 2
    revive:
      rules:
        - name: increment-decrement
          disabled: true
        - name: blank-imports
          disabled: false
        - name: context-as-argument
          disabled: false
        - name: context-keys-type
          disabled: false
        - name: dot-imports
          disabled: false
        - name: empty-block
          disabled: false
        - name: error-naming
          disabled: false
        - name: error-return
          disabled: false
        - name: error-strings
          disabled: false
        - name: errorf
          disabled: false
        - name: exported
          disabled: false
          arguments:
            # TODO: get these all enabled
            - "check-private-receivers"
            # - "check-public-interface"
            - "disable-checks-on-constants"
            - "disable-checks-on-functions"
            - "disable-checks-on-methods"
            - "disable-checks-on-types"
            - "disable-checks-on-variables"
        - name: import-alias-naming
          disabled: false
        - name: import-shadowing
          disabled: false
        - name: indent-error-flow
          disabled: false
        - name: package-comments
          disabled: false
        - name: range
          disabled: false
        - name: receiver-naming
          disabled: false
        - name: redefines-builtin-id
          disabled: false
        - name: redundant-test-main-exit
          disabled: false
        - name: superfluous-else
          disabled: false
        - name: time-naming
          disabled: false
        - name: unexported-return
          disabled: false
        - name: unreachable-code
          disabled: false
        - name: unused-parameter
          disabled: false
        - name: use-any
          disabled: false
        - name: var-declaration
          disabled: false
        - name: var-naming
          disabled: false
          arguments:
            - [] # AllowList
            - [] # DenyList
            - - skip-package-name-checks: true
  exclusions:
    generated: lax
    presets:
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - path: _test\.go
        linters:
          - dupl
      - path-except: _test\.go
        text: use `testutility.GetCurrentWorkingDirectory`
      - path: cmd/osv-reporter/main.go
        text: "package-comments: should have a package comment"
      - path: cmd/osv-scanner/fix/command.go
        text: "package-comments: should have a package comment"
      - path: cmd/osv-scanner/internal/cmd/helpers.go
        text: "package-comments: should have a package comment"
      - path: cmd/osv-scanner/internal/helper/callanalysis_parser.go
        text: "package-comments: should have a package comment"
      - path: cmd/osv-scanner/internal/testcmd/case.go
        text: "package-comments: should have a package comment"
      - path: cmd/osv-scanner/scan/command.go
        text: "package-comments: should have a package comment"
      - path: cmd/osv-scanner/scan/image/command.go
        text: "package-comments: should have a package comment"
      - path: cmd/osv-scanner/scan/source/command.go
        text: "package-comments: should have a package comment"
      - path: cmd/osv-scanner/update/command.go
        text: "package-comments: should have a package comment"
      - path: internal/builders/extractors.go
        text: "package-comments: should have a package comment"
      - path: internal/cachedregexp/regex.go
        text: "package-comments: should have a package comment"
      - path: internal/ci/utility.go
        text: "package-comments: should have a package comment"
      - path: internal/clients/clientimpl/baseimagematcher/baseimagematcher.go
        text: "package-comments: should have a package comment"
      - path: internal/clients/clientimpl/licensematcher/licensematcher.go
        text: "package-comments: should have a package comment"
      - path: internal/clients/clientimpl/localmatcher/localmatcher.go
        text: "package-comments: should have a package comment"
      - path: internal/clients/clientimpl/osvmatcher/cachedosvmatcher.go
        text: "package-comments: should have a package comment"
      - path: internal/clients/clientinterfaces/baseimagematcher.go
        text: "package-comments: should have a package comment"
      - path: internal/cmdlogger/fmt.go
        text: "package-comments: should have a package comment"
      - path: internal/config/config.go
        text: "package-comments: should have a package comment"
      - path: internal/customgitignore/dir.go
        text: "package-comments: should have a package comment"
      - path: internal/datasource/cache.go
        text: "package-comments: should have a package comment"
      - path: internal/depsdev/depsdev.go
        text: "package-comments: should have a package comment"
      - path: internal/grouper/grouper.go
        text: "package-comments: should have a package comment"
      - path: internal/identifiers/identifiers.go
        text: "package-comments: should have a package comment"
      - path: internal/imodels/ecosystem/ecosystem.go
        text: "package-comments: should have a package comment"
      - path: internal/imodels/imodels.go
        text: "package-comments: should have a package comment"
      - path: internal/imodels/results/scanresults.go
        text: "package-comments: should have a package comment"
      - path: internal/output/cyclonedx.go
        text: "package-comments: should have a package comment"
      - path: internal/output/sbom/cyclonedx_1_4.go
        text: "package-comments: should have a package comment"
      - path: internal/remediation/in_place.go
        text: "package-comments: should have a package comment"
      - path: internal/remediation/relax/npm.go
        text: "package-comments: should have a package comment"
      - path: internal/remediation/suggest/maven.go
        text: "package-comments: should have a package comment"
      - path: internal/remediation/upgrade/config.go
        text: "package-comments: should have a package comment"
      - path: internal/reporter/cyclonedx.go
        text: "package-comments: should have a package comment"
      - path: internal/resolution/client/client.go
        text: "package-comments: should have a package comment"
      - path: internal/resolution/clienttest/mock_resolution_client.go
        text: "package-comments: should have a package comment"
      - path: internal/resolution/dependency_subgraph.go
        text: "package-comments: should have a package comment"
      - path: internal/resolution/depfile/depfile.go
        text: "package-comments: package comment should be of the form"
      - path: internal/resolution/lockfile/lockfile.go
        text: "package-comments: should have a package comment"
      - path: internal/resolution/manifest/manifest.go
        text: "package-comments: should have a package comment"
      - path: internal/resolution/util/depsdev.go
        text: "package-comments: should have a package comment"
      - path: internal/scalibrextract/errors.go
        text: "package-comments: should have a package comment"
      - path: internal/scalibrextract/filesystem/vendored/vendored.go
        text: "package-comments: should have a package comment"
      - path: internal/scalibrextract/language/java/pomxmlenhanceable/pomxmlenhanceable.go
        text: "package-comments: should have a package comment"
      - path: internal/scalibrextract/language/javascript/nodemodules/extractor.go
        text: "package-comments: should have a package comment"
      - path: internal/scalibrextract/language/python/requirementsenhancable/requirementsenhanceable.go
        text: "package-comments: should have a package comment"
      - path: internal/scalibrextract/vcs/gitrepo/extractor.go
        text: "package-comments: should have a package comment"
      - path: internal/sourceanalysis/go.go
        text: "package-comments: should have a package comment"
      - path: internal/sourceanalysis/govulncheck/result.go
        text: "package-comments: should have a package comment"
      - path: internal/spdx/satisfies.go
        text: "package-comments: should have a package comment"
      - path: internal/testutility/fixture.go
        text: "package-comments: should have a package comment"
      - path: internal/tui/dependency-graph.go
        text: "package-comments: should have a package comment"
      - path: internal/url/url.go
        text: "package-comments: should have a package comment"
      - path: internal/utility/depgroup/devgroup.go
        text: "package-comments: should have a package comment"
      - path: internal/utility/maven/maven.go
        text: "package-comments: should have a package comment"
      - path: internal/utility/purl/composer.go
        text: "package-comments: should have a package comment"
      - path: internal/utility/results/results.go
        text: "package-comments: should have a package comment"
      - path: internal/utility/semverlike/version-semver-like.go
        text: "package-comments: package comment should be of the form"
      - path: internal/utility/severity/severity.go
        text: "package-comments: should have a package comment"
      - path: internal/utility/vulns/vulnerabilities.go
        text: "package-comments: should have a package comment"
      - path: internal/version/version.go
        text: "package-comments: should have a package comment"
      - path: pkg/models/cyclonedx.go
        text: "package-comments: should have a package comment"
      - path: pkg/osvscanner/filter.go
        text: "package-comments: should have a package comment"
      - path: pkg/osvscanner/internal/imagehelpers/imagehelpers.go
        text: "package-comments: should have a package comment"
      - path: pkg/osvscanner/internal/scanners/lockfile.go
        text: "package-comments: should have a package comment"
      - path: scripts/generate_mock_resolution_universe/main.go
        text: "package-comments: should have a package comment"
    paths:
      - internal/thirdparty/
      - third_party$
      - builtin$
      - examples$

formatters:
  enable:
    - gofmt
    - goimports
  exclusions:
    generated: lax
    paths:
      - internal/thirdparty/
      - third_party$
      - builtin$
      - examples$

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
